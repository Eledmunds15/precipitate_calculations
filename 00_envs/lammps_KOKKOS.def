# ============================================
# LAMMPS Container Definition File
# Author: Ethan L. Edmunds
# Version: v1.0
# Description: LAMMPS CPU MPI container with KOKKOS and Python support
# Base: nvidia/cuda:12.5.1-devel-ubuntu24.04
# ============================================

# ---------------------------
# Instructions
# ---------------------------
# 1. Build the image:
#    apptainer build lammps.sif lammps.def
#
# 2. Build the image with full debug log (for troubleshooting):
#    apptainer build --disable-cache lammps.sif lammps.def > build_lammps.log
#
# 3. Run the image interactively:
#    apptainer shell lammps.sif
#
# 4. Run LAMMPS non-interactively:
#    apptainer run lammps.sif -in input_script.in

Bootstrap: docker
From: nvidia/cuda:12.5.1-devel-ubuntu24.04

%labels
    Author Ethan L. Edmunds
    Version v1.0
    Description LAMMPS CPU MPI container based on CUDA base image

%post
    # ---------------------------
    # Set noninteractive frontend
    # ---------------------------
    export DEBIAN_FRONTEND=noninteractive

    # ---------------------------
    # Install build dependencies
    # ---------------------------
    apt-get update && \
    apt-get install -y --no-install-recommends \
        cmake \
        git \
        g++ \
        libopenmpi-dev \
        python3 \
        python3-dev \
        python3-pip \
        python3-venv \
        wget \
        curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

    # ---------------------------
    # Create Python virtual environment
    # ---------------------------
    python3 -m venv /opt/venv
    export PATH="/opt/venv/bin:$PATH"

    # Upgrade pip and install Python packages
    /opt/venv/bin/pip install --upgrade pip
    /opt/venv/bin/pip install \
        numpy scipy mpi4py pandas ase matscipy atomman cython ovito

    # ---------------------------
    # Clone and checkout LAMMPS stable release
    # ---------------------------
    git clone --depth 1 --branch release https://github.com/lammps/lammps.git /opt/lammps
    git config --system --add safe.directory /opt/lammps
    cd /opt/lammps
    git fetch --tags
    git checkout tags/stable_22Jul2025

    # ---------------------------
    # Build LAMMPS with KOKKOS and MPI support
    # ---------------------------
    mkdir build && cd build

    # Create CUDA stubs for build
    ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 || true
    export LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}

    cmake ../cmake \
        -D CMAKE_CXX_COMPILER=/opt/lammps/lib/kokkos/bin/nvcc_wrapper \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_MPI=ON \
        -D PKG_KOKKOS=YES \
        -D Kokkos_ENABLE_SERIAL=ON \
        -D Kokkos_ARCH_ADA89=YES \
        -D BUILD_SHARED_LIBS=YES \
        -D BUILD_OMP=ON \
        -D Kokkos_ENABLE_CUDA=YES \
        -D CMAKE_INSTALL_PREFIX=$VIRTUAL_ENV \
        -D PKG_MANYBODY=YES \
        -D PKG_MOLECULE=YES \
        -D PKG_REPLICA=YES \
        -D PKG_PYTHON=YES \
        -D python_EXECUTABLE="/opt/venv/bin/python3"

    # Build and install
    cmake --build . -j 20
    cmake --install .

    # Install Python bindings
    cd /opt/lammps/python
    /opt/venv/bin/pip install .

%environment
    # Add Python venv to PATH
    export PATH="/opt/venv/bin:$PATH"

%runscript
    echo "This container runs LAMMPS with MPI and KOKKOS support."
    echo "Usage example: lmp -in input_script.in"
    exec /opt/lammps/build/lmp "$@"
